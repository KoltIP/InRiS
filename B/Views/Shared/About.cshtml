@{
    ViewData["Title"] = "Division List";
}

<div>
    <p>Имеется список подразделений организации. </p>
    <p>Каждое подразделение имеет уникальное наименование, статус(Активно/Заблокировано), а также может входить в состав другого подразделения. </p>
    <p>Данные о наименованиях и структуре подразделений хранятся в базе данных PostgreSQL (https://www.postgresql.org/).</p>
    <p>Данные о статусе подразделений отдает сервис А. Статус каждого подразделения должен изменяться каждые 3 секунды.</p>
    <p>Данные о наименовании подразделений, структуру подразделений, а также страницу со списком отдает сервис B.</p>
    <p>Клиентская часть в браузере. </p>
    <p>Сервисы А и B должны быть реализованы на ASP.NET Core 2.1 или более новой версии.</p>
    <p>API сервиса А доступно только сервису B. Сервис B доступен для всех и должен реализовывать паттерн MVC.</p>

    <p>Создайте страницу, отображающую структуру данных о подразделениях со статусами.</p>
    <p>На странице должен быть контекстный фильтр по наименованию подразделения, а также кнопка "Синхронизация данных". </p>
    <p>По нажатию кнопки "Синхронизация данных" - организовать синхронизацию данных о подразделениях с данными в файле (формат произвольный).</p>
    <p>В БД древовидная структура, в файле тоже.</p>
    <ol>
        <li> Основное - это БД. Если там есть подразделение, его нельзя удалять.</li>
        <li> Синхронизация:
        <ul>
            <li style="list-style-type:square"> если подразделение есть в БД, но нет в файле, подразделение не трогаем, оставляем в БД;</li>
            <li style="list-style-type:square"> если подразделения нет в БД, но есть в файле, его нужно добавить в БД;</li>
            <li style="list-style-type:square"> если в файле и БД есть подразделения, то проверяем их положение в дереве: если положения одинаковые, то оставляем в БД, как есть; если положение подразделения в БД и файле отличаются, делаем, как в файле.</li>
        </ul>    
    </ol>
    <ol>
        <li> Сервис B пусть забирает файл с папки на диске, и синхронизирует с ним БД как описано.</li>
        <li> Сервис A просто отдает рандомный статус сервису B, статус в БД даже хранить не надо, а используется только для отображения на страничке.</li>
    </ol>
</div>