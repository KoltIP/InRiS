@model IEnumerable<B.Models.DivisionResponse>;

@{
    ViewData["Title"] = "Division List";
}


<script>

    function update()
    {
        $.get("Update",
            {},
            function(data)
            {
                let table = document.getElementById("content");
                while (table.firstChild)               
                    table.removeChild(table.firstChild);
                let length = data.length;
                for (let i = 0; i < length; i++)                 
                    $("#content").append('<tr><th>'+data[i].name+'</th><th>'+data[i].status+'</th><th>'+data[i].parentName+'</th></tr>');                
            });
    }

    function sort(str)
    {
       $.get("Find/" + str,
                {
                    search: str.value
                },
                function(data) {
                    let table = document.getElementById("content");
                    while (table.firstChild)
                        table.removeChild(table.firstChild);
                    let length = data.length;
                    for (let i = 0; i < length; i++)
                        $("#content").append('<tr><th>' + data[i].name + '</th><th>' + data[i].status + '</th><th>' + data[i].parentName + '</th></tr>');
                });
    }

    let timerId = setInterval(update, 3000);

    function find(str) 
    {
        clearTimeout(timerId);
        if (str != "")
            sort(str)
        else
        { 
            update();
            let timerId = setInterval(update, 3000);
        }
    }

</script>

<div>
    <div style="text-align:right">
            <input name="search" value="" placeholder="Search here..." type="search" onchange="find(this.value); return false;" autocomplete="off">      
    </div>
    @if (Model.Any())
    {
        <table class="table">
            <thead>
                <tr>
                    <th>
                         @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Status)
                    </th>
                    <th>
                         @Html.DisplayNameFor(model => model.ParentName)
                    </th>                    
                </tr>
            </thead>
            <tbody id="content">
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="font-weight:700">
                            @Html.DisplayFor(modelItem => item.Name)
                        </td>
                        <td style="font-weight:700">
                            @Html.DisplayFor(modelItem => item.Status)
                        </td>
                        <td style="font-weight:700">
                            @Html.DisplayFor(modelItem => item.ParentName)
                        </td>                   
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <h2>Здесь пока пусто</h2>
    }

    <a asp-action="Synchronization"  class="btn btn-secondary">
        <i class="fa-solid fa-plus">
            Synchronization
        </i>
    </a>

</div>